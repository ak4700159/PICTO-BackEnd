plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'org.hibernate.orm' version '6.5.3.Final'
	id 'org.graalvm.buildtools.native' version '0.10.3'
}

group = 'picto.com'
version = '0.0.1'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url = uri("https://repo.spring.io/milestone") }
}

dependencies {
	implementation group: 'org.javassist', name: 'javassist', version: '3.15.0-GA'
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'

	//보안
	implementation 'org.springframework.boot:spring-boot-starter-security'

	//JWT 관련 의존성 추가
	// 이 모듈에선 auth0을 이용하여 구현
	implementation group: 'org.json', name: 'json', version: '20200518'
	implementation 'com.auth0:java-jwt:4.5.0'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	// aws 클라우드 서비스
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

	// 웹관련
	compileOnly 'org.projectlombok:lombok'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.webjars:webjars-locator-core'
	implementation 'org.webjars:sockjs-client:1.5.1'
	implementation 'org.webjars:stomp-websocket:2.3.4'
	implementation 'org.webjars:bootstrap:5.2.3'
	implementation 'org.webjars:jquery:3.6.4'


	// mysql 연결
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// QueryDSL
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// Keycloak
	implementation 'org.keycloak:keycloak-spring-boot-starter:20.0.1'
	implementation 'org.keycloak:keycloak-spring-security-adapter:20.0.1'
	implementation 'org.keycloak:keycloak-admin-client:23.0.1'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.glassfish.jersey.core:jersey-client:3.0.0'
	implementation 'org.glassfish.jersey.inject:jersey-hk2:3.0.0'

	// springdoc-openapi-starter-webmvc-ui 의존성 추가 (스웨거)
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

	// javax.servlet 의존성 추가
	// 정확히 뭔진 모르겠는데 오류나서 넣음
	implementation 'javax.servlet:javax.servlet-api:4.0.1'

	// resource/templates 에 있는 html 파일 사용
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

	// Apache HttpClient 5
	implementation 'org.apache.httpcomponents.client5:httpclient5:5.2.1'

	// Spring Boot Mail
	implementation 'org.springframework.boot:spring-boot-starter-mail'
}

tasks.named('test') {
	//useJUnitPlatform()
}

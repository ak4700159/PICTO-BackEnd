name: "Picto Build and Push"
description: "입력받은 작업 디렉토리에서 Gradle 빌드와 Docker 이미지 빌드를 수행하는 Composite Action"

inputs:
  directory:
    description: "프로젝트가 위치한 서브 디렉토리 (예: PhotoManager, UserManager, SessionScheduler)"
    required: true
  docker-image:
    description: "빌드 후 푸시할 Docker 이미지 이름 (예: ak47001/picto:photo-manager)"
    required: true
  application-yml:
    description: "application.yml 파일에 들어갈 내용"
    required: true
  dockerhub_username:
    description: "DockerHub username"
    required: true
  dockerhub_password:
    description: "DockerHub password"
    required: true

runs:
  using: "composite"
  steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Set application.yml
      run: |
        cd ${{ inputs.directory }}
        mkdir -p src/main/resources
        touch ./src/main/resources/application.yml
        echo "${{ inputs.application-yml }}" | sudo tee ./src/main/resources/application.yml
        cat ./src/main/resources/application.yml
      shell: bash

    - name: Change wrapper permissions
      run: |
        cd ${{ inputs.directory }}
        chmod +x ./gradlew
      shell: bash

    - name: Init gradle wrapper
      run: |
        cd ${{ inputs.directory }}
        gradle wrapper
      shell: bash

    - name: Build with Gradle
      run: |
        cd ${{ inputs.directory }}
        ./gradlew clean build
      shell: bash

    - name: Login Docker
      uses: docker/login-action@v2
      with:
        username: ${{ inputs.dockerhub_username }}
        password: ${{ inputs.dockerhub_password }}

    - name: Build Docker image
      run: |
        cd ${{ inputs.directory }}
        docker build -f Dockerfile -t ${{ inputs.docker-image }} .
      shell: bash

    - name: Push Docker image
      run: |
        docker image push ${{ inputs.docker-image }}
      shell: bash
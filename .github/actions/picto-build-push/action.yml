name: "Picto CI/CD"
description: "입력받은 작업 디렉토리에서 Gradle 빌드와 Docker 이미지 빌드를 수행하는 Composite Action"

inputs:
  directory:
    description: "프로젝트가 위치한 서브 디렉토리 (예: PhotoManager, UserManager, SessionScheduler)"
    required: true
  docker-image:
    description: "빌드 후 푸시할 Docker 이미지 이름 (예: ak47001/picto:photo-manager)"
    required: true
  application-yml:
    description: "application.yml 파일에 들어갈 내용"
    required: true
  application-port:
    description: "어플리케이션 사용 포트(내부 외부 포트 동일)"
    required: true
  dockerhub_username:
    description: "DockerHub username"
    required: true
  dockerhub_password:
    description: "DockerHub password"
    required: true
  ssh_host:
    description: "PICTO ssh hostname"
    requried: true
  ssh_username:
    description: "PICTO ssh username"
    requried: true
  ssh_password:
    description: "PICTO ssh password"
    requried: true
  firebase-json:
    description: "firebase configuration"
    required: false

runs:
  using: "composite"
  steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Set application.yml
      run: |
        cd ${{ inputs.directory }}
        mkdir -p src/main/resources
        touch ./src/main/resources/application.yml
        echo "${{ inputs.application-yml }}" | sudo tee ./src/main/resources/application.yml
        cat ./src/main/resources/application.yml
      shell: bash

    - name: Optionally create firebase.json
      if: ${{ inputs.firebase-json != '' }}
      run: |
        cd ${{ inputs.directory }}
        touch ./src/main/resources/firebase.json
        echo "${{ inputs.firebase-json }}" | base64 -d > src/main/resources/picto-push-firebase-adminsdk-fbsvc.json
        echo "[INFO] firebase.json created:"
        cat src/main/resources/firebase.json
      shell: bash

    - name: Change wrapper permissions
      run: |
        cd ${{ inputs.directory }}
        chmod +x ./gradlew
      shell: bash

    - name: Init gradle wrapper
      run: |
        cd ${{ inputs.directory }}
        gradle wrapper
      shell: bash

    - name: Build with Gradle
      run: |
        cd ${{ inputs.directory }}
        ./gradlew clean build
      shell: bash

    - name: Login Docker
      uses: docker/login-action@v2
      with:
        username: ${{ inputs.dockerhub_username }}
        password: ${{ inputs.dockerhub_password }}

    - name: Build Docker image
      run: |
        cd ${{ inputs.directory }}
        docker build -f Dockerfile -t ${{ inputs.docker-image }} .
      shell: bash

    - name: Push Docker image
      run: |
        docker image push ${{ inputs.docker-image }}
      shell: bash

    - name: Connect SSH-Server
      uses: appleboy/ssh-action@v0.1.4
      with:
        host: ${{ inputs.ssh_host }}
        username: ${{ inputs.ssh_username }}
        password: ${{ inputs.ssh_password }}
        port: 22
        timeout: 40s # 30초 기본
        script: |
          export PATH=/usr/local/bin:$PATH
          docker stop ${{ inputs.directory }}
          docker rm ${{ inputs.directory }}
          docker pull ${{ inputs.docker-image }}
          docker run -d --name ${{ inputs.directory }} -p ${{ inputs.application-port }}:${{ inputs.application-port }} ${{ inputs.docker-image }}
